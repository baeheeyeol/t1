<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.domain.post.PostMapper">

    <!-- tb_post 테이블 전체 컬럼 -->
    <sql id="postColumns">
          id
        , title
        , content
        , writer
        , view_cnt
        , notice_yn
        , delete_yn
        , created_date
        , modified_date
    </sql>
    
    <!-- 페이징 처리 -->
    <sql id ="pageFront">
    SELECT 
    	* 
    FROM (SELECT T.*
    		   , ROWNUM AS RN 
		  FROM(
	
    </sql>
    <sql id ="pageEnd">
    <![CDATA[ 
    	         )t
    	   )where rn >= #{rowStart} and rn <= #{rowEnd} 
    	   ]]>
    </sql>

	<!-- 게시글 검색 -->
    <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'title'.equals( searchType )">
                            AND title LIKE '%'||#{keyword}||'%'
                        </when>
                        <when test="'content'.equals( searchType )">
                            AND content LIKE '%'||#{keyword}||'%'
                        </when>
                        <when test="'writer'.equals( searchType )">
                            AND writer LIKE '%'||#{keyword}||'%'
                        </when>
                    </choose>
                </when>
                
                <!-- 전체 검색일 때 -->
                <otherwise>
                    AND (
                           title LIKE '%'||#{keyword}||'%'
                        OR content LIKE '%'||#{keyword}||'%'
                        OR writer LIKE '%'||#{keyword}||'%'
                    )
                </otherwise>
            </choose>
        </if>
    </sql>

    <!-- 게시글 저장 -->
    <insert id="save" parameterType="com.study.domain.post.PostRequest">
    	<!-- keyProperty 값을 parameterType 객체에 주입-->
    	<selectKey order="BEFORE" keyProperty="id" resultType="Long">
			select tb_post_seq.nextval from dual
		</selectKey>
        INSERT INTO tb_post (
            <include refid="postColumns" />
        ) VALUES (
              #{id}
            , #{title}
            , #{content}
            , #{writer}
            , 0
            , #{noticeYn}
            , 0
            , sysdate
            , NULL
        )
    </insert>


    <!-- 게시글 상세정보 조회 -->
    <select id="findById" parameterType="long" resultType="com.study.domain.post.PostResponse">
        SELECT
            <include refid="postColumns" />
        FROM
            tb_post
        WHERE
            id = #{value}
    </select>


    <!-- 게시글 수정 -->
    <update id="update" parameterType="com.study.domain.post.PostRequest">
        UPDATE tb_post
        SET
              modified_date = sysdate
            , title = #{title}
            , content = #{content}
            , writer = #{writer}
            , notice_yn = #{noticeYn}
        WHERE
            id = #{id}
    </update>


    <!-- 게시글 삭제 -->
    <delete id="deleteById" parameterType="long">
        UPDATE tb_post
        SET
            delete_yn = 1
        WHERE
            id = #{id}
    </delete>


    <!-- 게시글 리스트 조회 -->
   <select id="findAll" parameterType="com.study.common.dto.SearchDto" resultType="com.study.domain.post.PostResponse">
        <include refid="pageFront" />
        SELECT
            <include refid="postColumns" />
        FROM
            tb_post
        WHERE
            delete_yn = 0
                 <include refid="search" />
        ORDER BY
            id DESC
        <include refid="pageEnd" />
    </select>
    
    <select id="count" resultType="Integer">
    	SELECT 
    		COUNT(*) 
    	FROM 
    		tb_post
    	WHERE 
    		delete_yn=0
    		 <include refid="search" />
    </select>

</mapper>